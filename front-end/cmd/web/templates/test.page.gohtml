{{ template "base" . }}

{{ define "content" }}
  <div class="container">
    <div class="row">
      <div class="col">
        <h1 class="mt-5">Test microservices</h1>
        <hr />
        <a id="brokerBtn" href="javascript:void(0);">Test Broker</a>
        <a id="authBtn" href="javascript:void(0);">Test Auth</a>
        <a id="logBtn" href="javascript:void(0);">Test Log</a>
        <div
          id="output"
          class="mt-5"
          style="outline: 1px solid silver; padding: 2em;"
        >
          <span class="text-muted">Output shows here...</span>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="col">
        <h4 class="mt-5">Sent</h4>
        <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
          <pre
            id="payload"
          ><span class="text-muted">Nothing sent yet...</span></pre>
        </div>
      </div>
      <div class="col">
        <h4 class="mt-5">Received</h4>
        <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
          <pre
            id="received"
          ><span class="text-muted">Nothing received yet...</span></pre>
        </div>
      </div>
    </div>
  </div>
{{ end }}

{{ define "js" }}
  <script>
    let brokerBtn = document.getElementById("brokerBtn");
    let authBtn = document.getElementById("authBtn");
    let logBtn = document.getElementById("logBtn");
    let output = document.getElementById("output");
    let sent = document.getElementById("payload");
    let received = document.getElementById("received");

    logBtn.addEventListener("click", function () {
      const pl = {
        action: "log",
        log: {
          name: "event",
          data: "Some kind of logging data",
        },
      };

      const hds = new Headers();
      hds.append("Content-Type", "application/json");

      const body = {
        method: "POST",
        headers: hds,
        body: JSON.stringify(pl),
      };

      fetch("http:\/\/localhost:8080/handle", body)
        .then((res) => res.json())
        .then((data) => {
          sent.innerHTML = JSON.stringify(payload, undefined, 4);
          received.innerHTML = JSON.stringify(data, undefined, 4);

          if (data.error) {
            output.innerHTML += `<br><strong>Error:</strong> ${data.error}`;
          } else {
            output.innerHTML += `<br><strong>Message:</strong> ${data.message}`;
          }
        })
        .catch((err) => {
          output.innerHTML += `<br><strong>Request Error:</strong> ${err}`;
        });
    });

    brokerBtn.addEventListener("click", function () {
      const body = { method: "POST" };

      fetch("http:\/\/localhost:8080", body)
        .then((res) => res.json())
        .then((data) => {
          sent.innerHTML = "empty post request";
          received.innerHTML = JSON.stringify(data, undefined, 4);

          if (data.error) {
            output.innerHTML += `<br><strong>Broker Error:</strong> ${data.error}`;
          } else {
            output.innerHTML += `<br><strong>Broker Message:</strong> ${data.message}`;
          }
        })
        .catch((err) => {
          output.innerHTML += `<br><strong>Broker Request Error:</strong> ${err}`;
        });
    });

    authBtn.addEventListener("click", function () {
      const payload = {
        action: "auth",
        auth: {
          email: "admin@example.com",
          password: "verysecret",
        },
      };

      const hds = new Headers();
      hds.append("Content-Type", "application/json");

      const body = {
        method: "POST",
        headers: hds,
        body: JSON.stringify(payload),
      };

      fetch("http:\/\/localhost:8080/handle", body)
        .then((res) => res.json())
        .then((data) => {
          sent.innerHTML = JSON.stringify(payload, undefined, 4);
          received.innerHTML = JSON.stringify(data, undefined, 4);

          if (data.error) {
            output.innerHTML += `<br><strong>Error:</strong> ${data.error}`;
          } else {
            output.innerHTML += `<br><strong>Message:</strong> ${data.message}`;
          }
        })
        .catch((err) => {
          output.innerHTML += `<br><strong>Request Error:</strong> ${err}`;
        });
    });
  </script>
{{ end }}
